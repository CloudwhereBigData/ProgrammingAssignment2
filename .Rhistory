cr <- corr("specdata", 150)
head(cr)
submit()
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 400)
head(cr)
submit()
submit()
cr <- corr("specdata", 5000)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
submit()
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
rep(1, 4)
rep(2, 3)
rnorm()
help(rnorm)
rnorm(help)
help rnorm()
gl(2, 8)
gl(2, 1, 20)
runif(10)
rnorm(10)
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times =40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0,5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
print(tf)
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "dennis")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, x), 100)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3:3], x[5:5, x[7:7]])
c()
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c)foo = 11, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c)"foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matric()
?matrix()
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_vector)
cbind(patients, my_matrix)
my_data <- data.frame)patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- ("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
!(5 == 7)
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 ==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any (ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
tapply(flags, flags$landmass, sum)
tapply(flags, landmass, sum)
tapply(flags$landmass, sum)
tapply(table(flags$landmass), landmass, sum)
tapply(table(flags$landmass), flags$landmass, sum)
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasss, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plant)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
?LETTERS
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prod = 0.7)
rbinom(1, size = 100, 0.7)
flips2 <- rbinom(100, size = 100, 0.7)
flips2 <- rbinom(100, size = 1, 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strtime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(datasets)
data(iris)
sample(iris)
mean(iris)
mean(iris$Sepal.Length)
lapply(iris$Sepal.Length, mean)
sapply(iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, iris$species, mean)
?iris
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
tapply(mpg, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
?apply
?sapply
sapply(mtcars$cyl = 4, mean)
mtcars$cyl = 4
mtcars
data(mtcars)
mtcars
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
hp <- with(mtcars, tapply(hp, cyl, mean))
hp
unclass(hp)
class(hp)
abs(hp[1], hp[8])
abs(hp[1], hp[3])
abs(hp(1), hp(1)
)
hp
hp(1)
hp[1]
?abs
abs(hp[1] - hp[3])
debug(ls)
ls
ls()
4
?matrix
mdat <- matrix(1:20, 2, 3)
mdat <- matrix(1:21, 2, 3)
mdat <- matrix(1:6, 2, 3)
solve(mdat)
mdat2 <- matrix (1:4, 2, 2)
solve(mdat2)
mdat
mdat2
setwd("~/Documents/DataScience/RProgramming/assignment2/ProgrammingAssignment2")
source("cachematrix.R"")
source("cachematrix.R")
mat <- matrix(1:4, 2, 2)
makeCacheMatrix(mat)
nmat <- makeCacheMatrix(mat)
source("cachematrix.R")
nmat <- makeCacheMatrix(mat)
cacheSolve(nmat)
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
source("cachematrix.R")
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
source("cachematrix.R")
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
antler$get()
antler$getInverse()
cacheSolve(antler)
source("cachematrix.R")
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
source("cachematrix.R")
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
source("cachematrix.R")
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
cacheSolve(antler)
cacheSolve(antler)
moose<-matrix(2:5,2,2)
antler<-moose
cacheSolve(antler)
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
source("cachematrix.R")
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
class(cacheSolve(antler))
moose<-matrix(1:64,8,8)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
solve(1:64, 8, 8)
solve(matrix(1:64, 8, 8))
solve(matrix(4:68, 8, 8))
solve(matrix(4:67, 8, 8))
?solve
A <- hilbert(4)
A[] <- as.complex(A)
## might not be supported on all platforms
try(solve(A))
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
h8 <- hilbert(8); h8
sh8 <- solve(h8)
round(sh8 %*% h8, 3)
A <- hilbert(4)
A[] <- as.complex(A)
## might not be supported on all platforms
try(solve(A))
class(A)
B <-makeCacheMatrix(A)
cacheSolve(B)
B <-makeCacheMatrix(A)
cacheSolve(B)
source("cachematrix.R")
source("cachematrix.R")
B <-makeCacheMatrix(A)
cacheSolve(B)
C <-makeCacheMatrix(A)
cacheSolve(C)
moose<-matrix(1:64,8,8)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
moose<-matrix(1:4,2,2)
antler<-makeCacheMatrix(moose)
cacheSolve(antler)
C<-matrix(1:9,3,3)
D<-makeCacheMatrix(C)
cacheSolve(D)
C<-matrix(c(3, 5, -1, 2), 2, 2)
D<-makeCacheMatrix(C)
cacheSolve(D)
cacheSolve(D)
cacheSolve(antler)
source("cachematrix.R)
source("cachematrix.R")
cacheSolve(antler)
cacheSolve(antler)
C<-matrix(c(3, 5, -1, 2), 2, 2)
D<-makeCacheMatrix(C)
cacheSolve(D)
cacheSolve(D)
